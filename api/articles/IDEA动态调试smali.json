{"title":"IDEA动态调试smali","slug":"IDEA动态调试smali","date":"2018-04-01T08:50:25.000Z","updated":"2018-04-01T08:20:28.488Z","comments":true,"path":"api/articles/IDEA动态调试smali.json","photos":[],"link":"","excerpt":"使用IDEA + smalidea + baksmali动态调试Apk，可以很方便的查看寄存器或者参数的值<br>","covers":["https://i.imgur.com/LHMxSDZ.png","https://i.imgur.com/nlBZl2s.png","https://i.imgur.com/3iG3Bxg.png","https://i.imgur.com/MEiOA4J.png","https://i.imgur.com/Bzj4CDz.png"],"content":"<p>使用<code>IDEA + smalidea + baksmali</code>动态调试Apk，可以很方便的查看寄存器或者参数的值<br><a id=\"more\"></a></p>\n<h2 id=\"0x00-反编译Apk\"><a href=\"#0x00-反编译Apk\" class=\"headerlink\" title=\"0x00 反编译Apk\"></a>0x00 反编译Apk</h2><p>假设安卓端应用在没有加壳的情况下，使用baksmali反编译apk文件为smali文件。</p>\n<p>下载地址<a href=\"https://bitbucket.org/JesusFreke/smali/downloads/\" target=\"_blank\" rel=\"noopener\">https://bitbucket.org/JesusFreke/smali/downloads/</a></p>\n<p>不知道为什么我的Java运行2.2*版本会报错，所以我使用baksmali2.0.2.jar</p>\n<p>运行<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar baksmali-2.0.2.jar flag.apk -o Debug\\src</span><br></pre></td></tr></table></figure></p>\n<p>-o 参数表示 输出文件夹。</p>\n<h2 id=\"0x01-配置IDEA\"><a href=\"#0x01-配置IDEA\" class=\"headerlink\" title=\"0x01 配置IDEA\"></a>0x01 配置IDEA</h2><p>首先需要安装smalidea插件，下载地址同上</p>\n<p>点击<code>File-&gt;Setting-&gt;Plugins-&gt;Install plugin from disk...</code><br>然后找到你下载的jar文件就可以了，<br><img src=\"https://i.imgur.com/LHMxSDZ.png\" alt=\"\"><br>然后重启IDEA。<br>完成之后，打开IDEA<code>File-&gt;New-&gt;Project from Existing Sources</code><br>打开刚才反汇编的Debug文件夹，一路next即可，<br>然后</p>\n<ol>\n<li>在IDEA中右键src文件夹，<code>Mark Directory as-&gt;Sources root</code></li>\n<li>点击<code>File -&gt; Project structure</code> 配置JDK</li>\n<li>点击<code>Run -&gt; Edit Configurations</code> 选择Remote 接下来只需要更改端口为8700</li>\n</ol>\n<p><img src=\"https://i.imgur.com/nlBZl2s.png\" alt=\"\"></p>\n<h2 id=\"配置APP运行环境\"><a href=\"#配置APP运行环境\" class=\"headerlink\" title=\"配置APP运行环境\"></a>配置APP运行环境</h2><p>这里可以选用Root掉的真机，亦可以使用模拟器<br>打开adb的DDMS（我的启动器是Android-sdk\\tools目录下的monitor.bat）<br>此时模拟器打开要调试的APP<br><img src=\"https://i.imgur.com/3iG3Bxg.png\" alt=\"\"><br>运行<br><code>adb shell am start -D -n com.example.administrator.myapplication/com.example.administrator.flag.MainActivity</code></p>\n<p>后面有关App的信息根据自己而定。此时查看模拟器界面已经是等待调试界面。</p>\n<p>最后，在IDEA中设置好需要的断点。点击<code>Run-&gt;Debug &quot;Demo&quot;</code></p>\n<p>在模拟器输入pass之后，就可以在IDEA中调试了。<br><img src=\"https://i.imgur.com/MEiOA4J.png\" alt=\"\"><br>用户名密码也显示出来了。</p>\n<h2 id=\"Tips\"><a href=\"#Tips\" class=\"headerlink\" title=\"Tips\"></a>Tips</h2><p>这种方法成功的前提是Apk具有Debug属性。如果没有<br>可借助<a href=\"https://ibotpeaches.github.io/Apktool/install/\" target=\"_blank\" rel=\"noopener\">Apktool</a>工具</p>\n<p>首先反编译</p>\n<p><code>java -jar apktool_2.0.0.jar d -d flag.apk -o out/</code></p>\n<p>进入out文件中，更改AndroidManifest.xml中的android:debuggable=”true”<br><img src=\"https://i.imgur.com/Bzj4CDz.png\" alt=\"\"></p>\n<p>修改好之后编译<br><code>java -jar apktool_2.0.0.jar b -o new_flag.apk</code></p>\n<p>之后进行签名<br>生成签名：</p>\n<p><code>keytool -genkey -v -keystore androidse.keystore(名字随便起) -alias androidsekey(别名，任意) -keyalg RSA -keysize 2048 -validity 365</code></p>\n<p><code>jarsigner -verbose -keystore mykeystore -signedjar new_flag_signed.apk(目标名字) new_flag.apk(要签名的apk) androidsekey(别名)</code></p>\n<p>就可以了</p>\n","categories":[],"tags":[{"name":"Android","slug":"Android","count":1,"path":"api/tags/Android.json"}]}